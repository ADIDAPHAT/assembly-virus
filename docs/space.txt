- use a register to store 0 and use it to pass 0 parameters to methods!
- for loading small values in a register use:
    push  byte 13 ; takes 3 bytes
    pop   eax
- RIP-relative memory operand, 64 bit
	default rel
	mov eax, [mem]
- XCHG EAX,reg32 takes only 1 byte
- The following instructions take one byte less when they use the accumulator than when they use any other register: ADD, ADC, SUB, SBB, AND, OR, XOR, CMP, TEST with an immediate operand without sign extension
- overlapping opcodes?
- use conditional setcc/cmov instructions
- To detect a debugger
	mov eax, large fs:30h           ; PEB saved to EAX
	mov eax, dword ptr [eax+18h]    ; ProcessHeap (offset 0x18 relative to PEB) saved to EAX
	cmp dword ptr ds:[eax+10h], 0   ; Check whether ForceFlags field (offset 0x10 relative to ProcessHeap) is 0
	jne DebuggerDetected            ; If previous test returned non zero, debugger is present

